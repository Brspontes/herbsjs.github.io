(self.webpackChunkherbjs=self.webpackChunkherbjs||[]).push([[626],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return c},kt:function(){return d}});var n=r(67294);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,s=function(e,t){if(null==e)return{};var r,n,s={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var i=n.createContext({}),u=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,s=e.mdxType,a=e.originalType,i=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),h=u(r),d=s,m=h["".concat(i,".").concat(d)]||h[d]||p[d]||a;return r?n.createElement(m,l(l({ref:t},c),{},{components:r})):n.createElement(m,l({ref:t},c))}));function d(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=r.length,l=new Array(a);l[0]=h;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:s,l[1]=o;for(var u=2;u<a;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},6785:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return o},metadata:function(){return i},toc:function(){return u},default:function(){return p}});var n=r(22122),s=r(19756),a=(r(67294),r(3905)),l={id:"herbs2rest",title:"Herbs2Rest",sidebar_label:"Herbs2Rest",slug:"/glues/herbs2rest"},o=void 0,i={unversionedId:"glues/herbs2rest",id:"glues/herbs2rest",isDocsHomePage:!1,title:"Herbs2Rest",description:"Create a REST API based on herbs entities (gotu) and usecases (buchu).",source:"@site/docs/glues/herbs2rest.md",sourceDirName:"glues",slug:"/glues/herbs2rest",permalink:"/docs/glues/herbs2rest",editUrl:"https://github.com/herbsjs/herbsjs.github.io/docs/glues/herbs2rest.md",version:"current",frontMatter:{id:"herbs2rest",title:"Herbs2Rest",sidebar_label:"Herbs2Rest",slug:"/glues/herbs2rest"},sidebar:"sidebar",previous:{title:"Herbs2gql",permalink:"/docs/glues/herbs2gql"},next:{title:"Herbs2knex",permalink:"/docs/glues/Herbs2knex"}},u=[{value:"Getting started",id:"getting-started",children:[{value:"Installing",id:"installing",children:[]},{value:"Using",id:"using",children:[]},{value:"How to contribute",id:"how-to-contribute",children:[]},{value:"License",id:"license",children:[]}]}],c={toc:u};function p(e){var t=e.components,r=(0,s.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Create a REST API based on herbs entities (",(0,a.kt)("a",{parentName:"p",href:"https://github.com/herbsjs/gotu"},"gotu"),") and usecases (",(0,a.kt)("a",{parentName:"p",href:"https://github.com/herbsjs/buchu"},"buchu"),")."),(0,a.kt)("h2",{id:"getting-started"},"Getting started"),(0,a.kt)("h3",{id:"installing"},"Installing"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ npm install @herbsjs/herbs2rest\n")),(0,a.kt)("h3",{id:"using"},"Using"),(0,a.kt)("p",null,"Use the method generateRoutes to generate api rest routes based on usecases."),(0,a.kt)("p",null,"herbs2rest works with ",(0,a.kt)("a",{parentName:"p",href:"https://expressjs.com/"},"express")," in version ",(0,a.kt)("a",{parentName:"p",href:"https://expressjs.com/en/4x/api.html"},"4.x"),"."),(0,a.kt)("h4",{id:"controller-list"},"Controller List"),(0,a.kt)("p",null,"The method needs a list of controllers like the example below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const controllerList = [\n  {\n    name: 'lists',\n    getAll: { usecase: require('../usecases/getLists'), controller: require('../controller') },\n    getById: { usecase: require('../usecases/getLists'), id: 'listId' },\n    post: { usecase: require('../usecases/createList') },\n    put: { usecase: require('../usecases/updateList') },\n    delete: { usecase: require('../usecases/deleteList') }\n  }\n]\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"name")," field is the name of the route (Ex. ",(0,a.kt)("em",{parentName:"p"},(0,a.kt)("a",{parentName:"em",href:"https://example.com/lists"},"https://example.com/lists")),")"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"id")," field is the param's custom name of the route (GetById, Put and Delete), if the field does not exist, the parameter name will be \"",(0,a.kt)("em",{parentName:"p"},"id"),'".'),(0,a.kt)("p",null,"The controller field is to replace the default controller."),(0,a.kt)("p",null,"The other fields refer to http methods using usecases (GetAll, GetById, Post, Put and Delete)."),(0,a.kt)("h4",{id:"custom-controller"},"Custom Controller"),(0,a.kt)("p",null,"To create a custom controller, it is necessary to follow this pattern."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const controller = async (usecase, req, user, res, next) => {\n  // Implementation\n}\n")),(0,a.kt)("p",null,"Each method parameter has different data:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"usecase: usecase in (",(0,a.kt)("a",{parentName:"li",href:"https://github.com/herbsjs/buchu"},"buchu"),") pattern."),(0,a.kt)("li",{parentName:"ul"},"req: body, query and params of route."),(0,a.kt)("li",{parentName:"ul"},"user: parameter passed in the request."),(0,a.kt)("li",{parentName:"ul"},"res: response object of ",(0,a.kt)("a",{parentName:"li",href:"https://expressjs.com/"},"express"),"."),(0,a.kt)("li",{parentName:"ul"},"next: allows the next queued route handler/middleware to handle the request.")),(0,a.kt)("h4",{id:"generate-routes"},"Generate Routes"),(0,a.kt)("p",null,"Generating and using new express routes:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const express = require('express')\nconst { generateRoutes } = require('@herbsjs/herbs2rest')\n\nconst app = express()\nconst routes = new express.Router()\n\ngenerateRoutes(controllerList, routes, true)  // true = console info endpoints\n\napp.use(routes)\n")),(0,a.kt)("h4",{id:"authorization"},"Authorization"),(0,a.kt)("p",null,"All use cases must implement the ",(0,a.kt)("inlineCode",{parentName:"p"},"authorize")," method and receive a user for authentication if using the default controller."),(0,a.kt)("p",null,"Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const { Ok, Err, usecase } = require('@herbsjs/herbs')\n\nconst testUseCase = (injection) =>\n  usecase('Test UseCase', {\n    authorize: async (user) => {\n      if (user === 'admin')\n        return Ok()\n      else\n        return Err('Invalid user')\n    }\n  })\n")),(0,a.kt)("hr",null),(0,a.kt)("h4",{id:"example"},"Example"),(0,a.kt)("p",null,"Additionally you can view a simple demo application of this library in ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/herbsjs/todolist-on-herbs"},"todolist-on-herbs"),"."),(0,a.kt)("h3",{id:"how-to-contribute"},"How to contribute"),(0,a.kt)("p",null,"If you would like to help contribute to this repository, please see ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/herbsjs/herbs2rest/blob/master/.github/CONTRIBUTING.md"},"CONTRIBUTING")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"license"},"License"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/herbsjs/herbs2rest/blob/master/LICENSE"},"MIT License"))))}p.isMDXComponent=!0}}]);